@page "/"
@using AKucher.Tasks.Module.Utils

@implements IDisposable

<PageTitle>Tasks</PageTitle>

@if (Tasks is not null)
{
    @foreach (var task in Tasks)
    {
        <TaskCard Task="task" TaskChanged="TaskChanged"></TaskCard>
    }
}

@code {
    private static readonly RWLock RWLock = new RWLock();

    List<TaskObject> Tasks { get; set; }

    private UnitOfWork Uow { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (Tasks == null)
        {
            using (RWLock.WriteLock())
            {
                if (Tasks == null)
                {
                    Uow = new UnitOfWork();
                    Tasks = Uow.Query<TaskObject>().OrderBy(x => x.Order).ToList();
                }
            }
        }
    }

    private void TaskChanged()
    {
        Uow.CommitChanges();
    }

    public void Dispose()
    {
        if (Uow != null)
        {
            Uow?.Dispose();
            Uow = null;
        }
    }
}